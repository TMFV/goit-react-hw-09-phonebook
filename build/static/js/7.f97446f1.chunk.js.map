{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","style","fontFamily","onSubmit","autoComplete","type","onChange","marginTop","variant","color","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"kPAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,oBAAIW,MAAO,CAAEC,WAAY,UAAzB,0BAEA,uBACEC,SAAUH,KAAKL,aACfM,MAAOtB,EAAOC,KACdwB,aAAa,MAHf,UAKE,cAAC,IAAD,CACEtB,MAAM,QACNuB,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,SAAUN,KAAKT,eAGjB,cAAC,IAAD,CACET,MAAM,UACNuB,KAAK,QACLjB,KAAK,QACLK,MAAOJ,EACPiB,SAAUN,KAAKT,eAEjB,cAAC,IAAD,CACET,MAAM,YACNuB,KAAK,WACLjB,KAAK,WACLK,MAAOH,EACPgB,SAAUN,KAAKT,eAEjB,uBACA,cAAC,IAAD,CACEU,MAAO,CAAEM,UAAW,IACpBF,KAAK,SACLG,QAAQ,YACRC,MAAM,UAJR,4C,GAtDiBC,aAoErBC,EAAqB,CACzBZ,WAAYa,IAAeC,UAOdC,sBAAQ,KAAMH,EAAdG,CAAkC5B","file":"static/js/7.f97446f1.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1 style={{ fontFamily: \"Roboto\" }}>Registration</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <TextField\n            label=\"Name:\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n\n          <TextField\n            label=\"E-mail:\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            label=\"Password:\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <br />\n          <Button\n            style={{ marginTop: 25 }}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            SIGN UP ðŸŸ¦\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n//Short version\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n//Full version\n/* const mapDispatchToProps = dispatch=>{\n  onSubmit: (data)=>dispatch (authOperations.register(data))\n} */\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}