{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","mapDispatchToProps","onRegister","authOperations","register","connect","useState","name","setName","email","setEmail","password","setPassword","style","fontFamily","onSubmit","e","preventDefault","autoComplete","type","value","onChange","event","currentTarget","marginTop","variant","color"],"mappings":"oNAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAgElB,IAAMC,EAAqB,CACzBC,WAAYC,IAAeC,UAOdC,sBAAQ,KAAMJ,EAAdI,EArEf,YAAuC,IAAfH,EAAc,EAAdA,WAAc,EACZI,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAEVF,mBAAS,IAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,OAGJJ,mBAAS,IAHL,mBAG7BK,EAH6B,KAGnBC,EAHmB,KAoBpC,OACE,gCACE,oBAAIC,MAAO,CAAEC,WAAY,UAAzB,0BAEA,uBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBACFf,EAAW,CAAEK,KAAMA,EAAME,MAAOA,EAAOE,SAAUA,IACjDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAMoBC,MAAOnB,EAAOC,KAAMuB,aAAa,MAA/D,UACE,cAAC,IAAD,CACErB,MAAM,QACNsB,KAAK,OACLZ,KAAK,OACLa,MAAOb,EACPc,SA1BiB,SAACC,GACxBd,EAAQc,EAAMC,cAAcH,UA4BxB,cAAC,IAAD,CACEvB,MAAM,UACNsB,KAAK,QACLZ,KAAK,QACLa,MAAOX,EACPY,SA/BkB,SAACC,GACzBZ,EAASY,EAAMC,cAAcH,UAgCzB,cAAC,IAAD,CACEvB,MAAM,YACNsB,KAAK,WACLZ,KAAK,WACLa,MAAOT,EACPU,SAnCqB,SAACC,GAC5BV,EAAYU,EAAMC,cAAcH,UAoC5B,uBACA,cAAC,IAAD,CACEP,MAAO,CAAEW,UAAW,IACpBL,KAAK,SACLM,QAAQ,YACRC,MAAM,UAJR","file":"static/js/7.0c7dba35.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\nfunction RegisterView({ onRegister }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleNameChange = (event) => {\n    setName(event.currentTarget.value);\n  };\n  const handleEmailChange = (event) => {\n    setEmail(event.currentTarget.value);\n  };\n  const handlePasswordChange = (event) => {\n    setPassword(event.currentTarget.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onRegister({ name: name, email: email, password: password });\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return (\n    <div>\n      <h1 style={{ fontFamily: \"Roboto\" }}>Registration</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <TextField\n          label=\"Name:\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n        />\n\n        <TextField\n          label=\"E-mail:\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <TextField\n          label=\"Password:\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <br />\n        <Button\n          style={{ marginTop: 25 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          SIGN UP ðŸŸ¦\n        </Button>\n      </form>\n    </div>\n  );\n}\n//Short version\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n//Full version\n/* const mapDispatchToProps = dispatch=>{\n  onSubmit: (data)=>dispatch (authOperations.register(data))\n} */\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}