{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/app/contacts-selectors.js","views/ContactsView.js"],"names":["module","exports","ContactForm","onSubmitData","useState","nameState","setNameState","numberState","setNumberState","reset","className","style","contactform","type","onSubmit","event","preventDefault","name","number","TextField","label","pattern","title","required","onChange","currentTarget","value","Button","marginTop","variant","color","ContactList","del","contacts","map","contact","id","marginLeft","height","margin","data-id","onClick","Id","defaultProps","Filter","setFilterToState","toUpperCase","getFilter","state","app","filters","getContacts","getIsLoading","loading","getVisibleFilterArray","createSelector","filter","newArr","includes","connect","isLoadingContacts","selectors","visibleArray","dispatch","fetchContacts","appOperations","formSubmitHandler","contactData","addContact","contactDelete","contactId","deleteContact","filterSet","str","appActions","useEffect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,YAAc,mC,uGCmEjBC,MA9Df,YAAwC,IAAjBC,EAAgB,EAAhBA,aAAgB,EACHC,mBAAS,IADN,mBAC9BC,EAD8B,KACnBC,EADmB,OAECF,mBAAS,IAFV,mBAE9BG,EAF8B,KAEjBC,EAFiB,KAiB/BC,EAAQ,WACZH,EAAa,IACbE,EAAe,KAGjB,OACE,qBAAKE,UAAWC,IAAMC,YAAtB,SACE,uBAAMC,KAAK,SAASC,SAfH,SAACC,GACpBA,EAAMC,iBAGNb,EAFoB,CAAEc,KAAMZ,EAAWa,OAAQX,IAI/CE,KASE,UACE,cAACU,EAAA,EAAD,CACEC,MAAM,QACNP,KAAK,OACLI,KAAK,OACLI,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SA7BiB,SAACT,GACxBT,EAAaS,EAAMU,cAAcC,QA6B3BA,MAAOrB,IAET,cAACc,EAAA,EAAD,CACEC,MAAM,UACNP,KAAK,MACLI,KAAK,SACLI,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SApCmB,SAACT,GAC1BP,EAAeO,EAAMU,cAAcC,QAoC7BA,MAAOnB,IAET,uBACA,cAACoB,EAAA,EAAD,CACEhB,MAAO,CAAEiB,UAAW,IACpBf,KAAK,SACLgB,QAAQ,YACRC,MAAM,UAJR,+BChDR,SAASC,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,SAuB1B,OAAO,6BAlBEA,EAASC,KAAI,SAACC,GACnB,OACE,qBAAqBC,GAAID,EAAQC,GAAjC,UACE,cAACT,EAAA,EAAD,CACEhB,MAAO,CAAE0B,WAAY,GAAIC,OAAQ,GAAIC,OAAQ,GAC7CC,UAASL,EAAQC,GACjBP,QAAQ,YACRC,MAAM,UACNW,QAAS,kBAZDC,EAYgBP,EAAQC,QAXxCJ,EAAIU,GADW,IAACA,GAOV,oBADF,UAUMP,EAAQlB,KAVd,aAUuBkB,EAAQjB,UAVtBiB,EAAQC,SAsBzBL,EAAYY,aAAe,CACzBV,SAAU,IAGGF,QClBAa,MAff,YAAuC,IAArBC,EAAoB,EAApBA,iBAKhB,OACE,8BACE,cAAC1B,EAAA,EAAD,CAAWC,MAAM,UAAUI,SANR,SAACT,GACtB,IAAIW,EAAQX,EAAMU,cAAcC,MAAMoB,cACtCD,EAAiBnB,S,uCCJfqB,EAAY,SAACC,GAAD,OAAWA,EAAMC,IAAIC,SACjCC,EAAc,SAACH,GAAD,OAAWA,EAAMC,IAAIhB,UAqB1B,GACbmB,aAxBmB,SAACJ,GAAD,OAAWA,EAAMC,IAAII,SAyBxCN,YACAI,cACAG,sBAb4BC,YAC5B,CAACJ,EAAaJ,IACd,SAACd,EAAUuB,GACT,IAAIC,EAASxB,EAASuB,QAAO,qBAAGvC,KACzB6B,cAAcY,SAASF,MAE9B,OAAO,YAAIC,OCwBAE,uBAfS,SAACX,GAAD,MAAY,CAClCY,kBAAmBC,EAAUT,aAAaJ,GAC1Cf,SAAU4B,EAAUV,YAAYH,GAChCQ,OAAQK,EAAUd,UAAUC,GAC5Bc,aAAcD,EAAUP,sBAAsBN,OAGpB,SAACe,GAAD,MAAe,CACzCC,cAAe,kBAAMD,EAASE,IAAcD,kBAC5CE,kBAAmB,SAACC,GAAD,OACjBJ,EAASE,IAAcG,WAAWD,KACpCE,cAAe,SAACC,GAAD,OACbP,EAASE,IAAcM,cAAcD,KACvCE,UAAW,SAACC,GAAD,OAASV,EAASW,IAAWF,UAAUC,QAErCd,EArCf,YAOI,IANFK,EAMC,EANDA,cACAJ,EAKC,EALDA,kBACAM,EAIC,EAJDA,kBACAM,EAGC,EAHDA,UACAV,EAEC,EAFDA,aACAO,EACC,EADDA,cAKA,OAHAM,qBAAU,WACRX,MACC,IAED,sBAAKtD,UAAU,WAAf,UACE,2CACCkD,GAAqB,6CACtB,cAAC,EAAD,CAAazD,aAAc+D,IAC3B,0CACA,cAAC,EAAD,CAAQrB,iBAAkB2B,IAC1B,cAAC,EAAD,CAAavC,SAAU6B,EAAc9B,IAAKqC","file":"static/js/4.537e25fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__wU_Pk\"};","import style from \"./ContactForm.module.css\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction ContactForm({ onSubmitData }) {\n  const [nameState, setNameState] = useState(\"\");\n  const [numberState, setNumberState] = useState(\"\");\n  const handleNameChange = (event) => {\n    setNameState(event.currentTarget.value);\n  };\n  const handleNumberChange = (event) => {\n    setNumberState(event.currentTarget.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let contactForAdd = { name: nameState, number: numberState };\n\n    onSubmitData(contactForAdd);\n\n    reset();\n  };\n  const reset = () => {\n    setNameState(\"\");\n    setNumberState(\"\");\n  };\n\n  return (\n    <div className={style.contactform}>\n      <form type=\"submit\" onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name:\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n          value={nameState}\n        />\n        <TextField\n          label=\"Number:\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n          value={numberState}\n        />\n        <br />\n        <Button\n          style={{ marginTop: 25 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ContactList({ del, contacts }) {\n  const deleteId = (Id) => {\n    del(Id);\n  };\n  const createList = () => {\n    return contacts.map((contact) => {\n      return (\n        <li key={contact.id} id={contact.id}>\n          <Button\n            style={{ marginLeft: 25, height: 30, margin: 5 }}\n            data-id={contact.id}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => deleteId(contact.id)}\n          >\n            Delete\n          </Button>\n          {`${contact.name}: ${contact.number}`}\n        </li>\n      );\n    });\n  };\n\n  return <ul>{createList()}</ul>;\n}\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  del: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction Filter({ setFilterToState }) {\n  const setFilterValue = (event) => {\n    let value = event.currentTarget.value.toUpperCase();\n    setFilterToState(value);\n  };\n  return (\n    <div>\n      <TextField label=\"Filter \" onChange={setFilterValue} />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getIsLoading = (state) => state.app.loading;\nconst getFilter = (state) => state.app.filters;\nconst getContacts = (state) => state.app.contacts;\n\n/* const getVisibleFilterArray = (state) => {\n  const allContacts = getContacts(state);\n  const filterNames = getFilter(state);\n  let newArr = allContacts.filter(({ name }) =>\n    name.toUpperCase().includes(filterNames)\n  );\n  return [...newArr];\n}; */\n\n// add memo\nconst getVisibleFilterArray = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    let newArr = contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter)\n    );\n    return [...newArr];\n  }\n);\nexport default {\n  getIsLoading,\n  getFilter,\n  getContacts,\n  getVisibleFilterArray,\n};\n","import React, { useEffect } from \"react\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\nimport appActions from \"../redux/app/app-actions\";\nimport appOperations from \"../redux/app/app-operations\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../redux/app/contacts-selectors\";\n\nfunction ContactsView({\n  fetchContacts,\n  isLoadingContacts,\n  formSubmitHandler,\n  filterSet,\n  visibleArray,\n  contactDelete,\n}) {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return (\n    <div className=\"contacts\">\n      <h1>Phonebook</h1>\n      {isLoadingContacts && <h2>Loading ...</h2>}\n      <ContactForm onSubmitData={formSubmitHandler} />\n      <h1>Contacts</h1>\n      <Filter setFilterToState={filterSet} />\n      <ContactList contacts={visibleArray} del={contactDelete} />\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  visibleArray: selectors.getVisibleFilterArray(state),\n});\n\nconst mapDispatchToProrps = (dispatch) => ({\n  fetchContacts: () => dispatch(appOperations.fetchContacts()),\n  formSubmitHandler: (contactData) =>\n    dispatch(appOperations.addContact(contactData)),\n  contactDelete: (contactId) =>\n    dispatch(appOperations.deleteContact(contactId)),\n  filterSet: (str) => dispatch(appActions.filterSet(str)),\n});\nexport default connect(mapStateToProps, mapDispatchToProrps)(ContactsView);\n"],"sourceRoot":""}